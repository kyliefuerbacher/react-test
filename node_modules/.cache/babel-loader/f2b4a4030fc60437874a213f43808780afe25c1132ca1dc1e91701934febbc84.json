{"ast":null,"code":"var _jsxFileName = \"/Users/kyliefuerbacher/Documents/GitHub/react-test/src/App.js\";\nimport React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport './App.css';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n//import Header from './components/Header';\nimport Home from './components/HomePage';\nimport UploadPage from './components/UploadPage';\nimport ParkingPage from './components/ParkingPage';\nimport ReviewPage from './components/ReviewPage';\nimport FinalPage from './components/FinalPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 40\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/uploadpage\",\n          element: /*#__PURE__*/_jsxDEV(UploadPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/parkingpage\",\n          element: /*#__PURE__*/_jsxDEV(ParkingPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/reviewpage\",\n          element: /*#__PURE__*/_jsxDEV(ReviewPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 44\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/finalpage\",\n          element: /*#__PURE__*/_jsxDEV(FinalPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 43\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n/* Ibrahim's code\n// backend/app.js\nconst express = require('express');\nconst mongoose = require('mongoose');\nconst cors = require('cors');\n\nconst app = express();\nconst PORT = process.env.PORT || 5000;\n\n// Connect to MongoDB\nconst MONGODB_URI = 'mongodb://localhost:27017/mydatabase'; // Replace 'mydatabase' with your MongoDB database name\nmongoose.connect(MONGODB_URI, { useNewUrlParser: true, useUnifiedTopology: true })\n  .then(() => console.log('Connected to MongoDB'))\n  .catch((error) => console.error('Error connecting to MongoDB:', error));\n\n// Define a sample data collection schema\nconst sampleSchema = new mongoose.Schema({\n  name: { type: String, required: true },\n});\n\nconst SampleModel = mongoose.model('Sample', sampleSchema);\n\n// CORS middleware\napp.use(cors());\n\n// Fetch data from MongoDB\napp.get('/api/data', async (req, res) => {\n  try {\n    const data = await SampleModel.find();\n    res.json(data);\n  } catch (error) {\n    res.status(500).json({ message: 'Error fetching data from MongoDB' });\n  }\n});\n\napp.listen(PORT, () => console.log(`Server started on port ${PORT}`));\n*/\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","BrowserRouter","Router","Routes","Route","Home","UploadPage","ParkingPage","ReviewPage","FinalPage","jsxDEV","_jsxDEV","Fragment","_Fragment","App","children","exact","path","element","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/kyliefuerbacher/Documents/GitHub/react-test/src/App.js"],"sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n//import Header from './components/Header';\nimport Home from './components/HomePage';\nimport UploadPage from './components/UploadPage';\nimport ParkingPage from './components/ParkingPage';\nimport ReviewPage from './components/ReviewPage';\nimport FinalPage from './components/FinalPage';\n  \nexport default function App() {\n  \n  return (\n    <>\n    <Router>\n      <Routes>\n        <Route exact path=\"/\" element={<Home/>} />\n        <Route path=\"/uploadpage\" element={<UploadPage/>} />\n        <Route path=\"/parkingpage\" element={<ParkingPage/>} />\n        <Route path=\"/reviewpage\" element={<ReviewPage/>} />\n        <Route path=\"/finalpage\" element={<FinalPage/>} />\n      </Routes>\n    </Router>\n\n    </>\n  );\n}\n\n\n\n/* Ibrahim's code\n// backend/app.js\nconst express = require('express');\nconst mongoose = require('mongoose');\nconst cors = require('cors');\n\nconst app = express();\nconst PORT = process.env.PORT || 5000;\n\n// Connect to MongoDB\nconst MONGODB_URI = 'mongodb://localhost:27017/mydatabase'; // Replace 'mydatabase' with your MongoDB database name\nmongoose.connect(MONGODB_URI, { useNewUrlParser: true, useUnifiedTopology: true })\n  .then(() => console.log('Connected to MongoDB'))\n  .catch((error) => console.error('Error connecting to MongoDB:', error));\n\n// Define a sample data collection schema\nconst sampleSchema = new mongoose.Schema({\n  name: { type: String, required: true },\n});\n\nconst SampleModel = mongoose.model('Sample', sampleSchema);\n\n// CORS middleware\napp.use(cors());\n\n// Fetch data from MongoDB\napp.get('/api/data', async (req, res) => {\n  try {\n    const data = await SampleModel.find();\n    res.json(data);\n  } catch (error) {\n    res.status(500).json({ message: 'Error fetching data from MongoDB' });\n  }\n});\n\napp.listen(PORT, () => console.log(`Server started on port ${PORT}`));\n*/"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kCAAkC;AACzC,OAAO,aAAa;AACpB,OAAO,WAAW;AAClB,SACEC,aAAa,IAAIC,MAAM,EACvBC,MAAM,EACNC,KAAK,QACA,kBAAkB;AACzB;AACA,OAAOC,IAAI,MAAM,uBAAuB;AACxC,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,SAAS,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/C,eAAe,SAASC,GAAGA,CAAA,EAAG;EAE5B,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACAJ,OAAA,CAACT,MAAM;MAAAa,QAAA,eACLJ,OAAA,CAACR,MAAM;QAAAY,QAAA,gBACLJ,OAAA,CAACP,KAAK;UAACY,KAAK;UAACC,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEP,OAAA,CAACN,IAAI;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC1CX,OAAA,CAACP,KAAK;UAACa,IAAI,EAAC,aAAa;UAACC,OAAO,eAAEP,OAAA,CAACL,UAAU;YAAAa,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpDX,OAAA,CAACP,KAAK;UAACa,IAAI,EAAC,cAAc;UAACC,OAAO,eAAEP,OAAA,CAACJ,WAAW;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACtDX,OAAA,CAACP,KAAK;UAACa,IAAI,EAAC,aAAa;UAACC,OAAO,eAAEP,OAAA,CAACH,UAAU;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACpDX,OAAA,CAACP,KAAK;UAACa,IAAI,EAAC,YAAY;UAACC,OAAO,eAAEP,OAAA,CAACF,SAAS;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBAEP,CAAC;AAEP;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCAC,EAAA,GApBwBT,GAAG;AAAA,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}