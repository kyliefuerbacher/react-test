{"ast":null,"code":"var _jsxFileName = \"/Users/kyliefuerbacher/Documents/GitHub/react-test/src/components/SourceType.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SourceType() {\n  _s();\n  const [display, setDisplay] = useState('Select');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'block',\n      width: 700,\n      padding: 30\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Upload from: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n      children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n        variant: \"primary\",\n        children: display ? display : 'Select'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n        children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          href: \"#\",\n          onClick: () => setDisplay(\"Local\"),\n          children: \"Local\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          href: \"#\",\n          onClick: () => setDisplay(\"Google Drive\"),\n          children: \"Google Drive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n          href: \"#\",\n          onClick: () => setDisplay(\"SharePoint\"),\n          children: \"SharePoint\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_s(SourceType, \"RYOx+MAE+5URhHv/G/9R0U8Ucd8=\");\n_c = SourceType;\nvar _c;\n$RefreshReg$(_c, \"SourceType\");","map":{"version":3,"names":["React","useState","Dropdown","jsxDEV","_jsxDEV","SourceType","_s","display","setDisplay","style","width","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","Toggle","variant","Menu","Item","href","onClick","_c","$RefreshReg$"],"sources":["/Users/kyliefuerbacher/Documents/GitHub/react-test/src/components/SourceType.js"],"sourcesContent":["import React, { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Dropdown from 'react-bootstrap/Dropdown';\n\nexport default function SourceType() {\n  const [display, setDisplay] = useState('Select');\n    return (\n    <div style={{ display: 'block', \n                  width: 700, \n                  padding: 30 }}>\n      <h4>Upload from: </h4>\n      <Dropdown>\n        <Dropdown.Toggle variant=\"primary\">\n          {display ? display : 'Select'}\n        </Dropdown.Toggle>\n        <Dropdown.Menu>\n          <Dropdown.Item href=\"#\" onClick={() => setDisplay(\"Local\")}>\n            Local\n          </Dropdown.Item>\n          <Dropdown.Item href=\"#\" onClick={() => setDisplay(\"Google Drive\")}>\n            Google Drive\n          </Dropdown.Item>\n          <Dropdown.Item href=\"#\" onClick={() => setDisplay(\"SharePoint\")}>\n            SharePoint\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </div>\n    );\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kCAAkC;AACzC,OAAOC,QAAQ,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,QAAQ,CAAC;EAC9C,oBACAG,OAAA;IAAKK,KAAK,EAAE;MAAEF,OAAO,EAAE,OAAO;MAChBG,KAAK,EAAE,GAAG;MACVC,OAAO,EAAE;IAAG,CAAE;IAAAC,QAAA,gBAC1BR,OAAA;MAAAQ,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBZ,OAAA,CAACF,QAAQ;MAAAU,QAAA,gBACPR,OAAA,CAACF,QAAQ,CAACe,MAAM;QAACC,OAAO,EAAC,SAAS;QAAAN,QAAA,EAC/BL,OAAO,GAAGA,OAAO,GAAG;MAAQ;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACd,CAAC,eAClBZ,OAAA,CAACF,QAAQ,CAACiB,IAAI;QAAAP,QAAA,gBACZR,OAAA,CAACF,QAAQ,CAACkB,IAAI;UAACC,IAAI,EAAC,GAAG;UAACC,OAAO,EAAEA,CAAA,KAAMd,UAAU,CAAC,OAAO,CAAE;UAAAI,QAAA,EAAC;QAE5D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,eAChBZ,OAAA,CAACF,QAAQ,CAACkB,IAAI;UAACC,IAAI,EAAC,GAAG;UAACC,OAAO,EAAEA,CAAA,KAAMd,UAAU,CAAC,cAAc,CAAE;UAAAI,QAAA,EAAC;QAEnE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC,eAChBZ,OAAA,CAACF,QAAQ,CAACkB,IAAI;UAACC,IAAI,EAAC,GAAG;UAACC,OAAO,EAAEA,CAAA,KAAMd,UAAU,CAAC,YAAY,CAAE;UAAAI,QAAA,EAAC;QAEjE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV;AAACV,EAAA,CAzBuBD,UAAU;AAAAkB,EAAA,GAAVlB,UAAU;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}